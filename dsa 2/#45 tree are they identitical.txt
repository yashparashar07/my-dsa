#include <bits/stdc++.h>
using namespace std;

struct node{
    int data;
    node * left;
    node *right;
}typedef node;

struct node * createNode(int data){
    struct node * n;
    n = new node;
    n -> data = data;
    n -> left = NULL;
    n -> right = NULL;
    return n;
}
for (size_t i = 0; i < count; i++)
{
    /* code */
}

bool isIdentitical(node * r1 , node * r2){
    if(r1 == NULL && r2 == NULL){
        return true;
    }
    
    if((r1 == NULL && r2 != NULL) || (r1 != NULL && r2 == NULL)){
        return false;
    }
    
    if(r2 -> data == r1 -> data){
        isIdentitical(r1 -> left , r2 -> left);
        isIdentitical(r1 -> right , r2 -> right);
        return true;
    }
    
    return false;
}

int main(){
    
    node * p1 = createNode(50); node * p6 = createNode(55); node * p5 = createNode(40);
    node * p2 = createNode(30); node * p7 = createNode(70);
    node * p3 = createNode(60); node * p8 = createNode(10);
    node * p4 = createNode(20); node * p9 = createNode(25);
    
    p1 -> left = p2;    p1 -> right = p3;
    
    p2 -> left = p4;    p3 -> left = p6; 
    p2 -> right = p5;   p3 -> right = p7;
    p4 -> left = p8;    p4 -> right = p9;
    
    if(isIdentitical(p1 , p1)){
        cout << "they are Identitical" << endl ;
    }
    else{
        cout << "they are NOT Identitical" << endl ;
    }
    return 0;
}

// contrubuted by Yash Parashar GoG
