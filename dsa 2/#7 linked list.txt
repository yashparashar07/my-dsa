#include <iostream>
using namespace std;

class Node{
    public:
    int data;
    Node * next;
    
    Node(int data){
        this->data = data;
        this -> next = NULL;
    }
    
};

void InsertAtTail(Node * &tail , int value){
    Node * temp = new Node(value);
    tail -> next = temp ;
    tail = temp;
}

void InsertAtHead(Node * &head , int value){
    Node * temp = new Node(value);
    temp -> next = head;
    head = temp;
}

void InsertAtPosition(Node * &head , int position , int value){
    
    if (position == 1){
        InsertAtHead(head , value);
        return;
    }

    Node * ptr = head;
    for(int i = 0 ; i < position-2 ; i++ ){
        ptr = ptr-> next;
    }
    
    Node * Nodetoinsert = new Node(value);
    Nodetoinsert -> next = ptr -> next;
    ptr -> next = Nodetoinsert;

}

void InsertAtPosition2(Node * &head , int position , int value){
    Node * ptr = head;
    int count = 1 ;
    while(count < position-1){
        ptr = ptr-> next;
        count++;
    }
    
    Node * Nodetoinsert = new Node(value);
    Nodetoinsert -> next = ptr -> next;
    ptr -> next = Nodetoinsert;
}

void print(Node * &head){
    Node * temp = head;
    while(temp  != NULL){
        cout << temp->data << "->" << temp-> next << "  ";
        temp = temp -> next ;
    }
    cout << endl;
}

int main(){

    Node * node1 = new Node(10);
    // cout << node1 -> data << endl;
    // cout << node1 -> next << endl;
    Node * head = node1;
    Node * tail = node1;
    InsertAtHead(head , 3);
    InsertAtHead(head , 4);
    InsertAtHead(head , 6);
    InsertAtHead(head , 2);
    
    InsertAtTail(tail, 6);
    InsertAtHead(head , 30);
    InsertAtPosition(head , 1 , 80);
    InsertAtPosition2(head , 5 , 800);
    print(head);
    
    return 0;
}

